{"version":3,"sources":["Header/Title.js","Header/NavBar.js","Header/Header.js","Slider/Title.js","Slider/Writing.js","Slider/Slider.js","Slider/SliderCollage.js","sliderData.js","index.js"],"names":["Title","props","className","href","name","NavBar","items","map","e","key","style","color","toLowerCase","Header","this","TitleHref","list","React","Component","text","linkLabel","subTitle","rel","target","id","Writing","ListView","ordered","bullets","console","log","listStyleType","marginTop","Slider","state","index","path","colorLeft","colorRight","clickTime","Date","now","handleLeftClick","bind","handleRightClick","scroll","_index","length","Img","document","getElementById","title","animation","addEventListener","animationPlayState","imgs","setState","img","setTimeout","subtitleLink","onClick","src","alt","SliderCollage","sections","element","sliderData","push","link","toReturn","SliderData","ReactDOM","render"],"mappings":"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","file":"js/main.fa64b030.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles.css';\r\n\r\nexport const Title = (props)=>{\r\n    return (<a className= \"title\" href ={props.href}>{props.name}</a>);\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles.css'\r\n\r\nexport const NavBar = (props)=>{\r\n    const items = props.items.map((e)=>{\r\n        return (\r\n        <li className = \"navlistItems\" key = {e}>\r\n            <a style ={{color: 'white'}}href={\"/\"+e.toLowerCase()}>{e}</a>\r\n        </li>);\r\n    });\r\n    return(<ul className=\"navlist\">{items}</ul>);\r\n};\r\n\r\nNavBar.propTypes ={\r\n    items: PropTypes.array.isRequired\r\n};","/*\r\nAuthor: Amritpal Chera\r\nDate: 2020-04-10\r\nDescription: The files render a header and receives 2 props; Title(props.name), NavList(props.list)\r\n*/\r\n\r\nimport React from 'react';\r\nimport {Title} from './Title';\r\nimport {NavBar} from './NavBar'\r\n\r\nexport class Header extends React.Component{\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                <Title name={this.props.name} href = {this.props.TitleHref}/>\r\n                <NavBar items = {this.props.list}/>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport '../styles.css';\r\n\r\nexport const Title = (props)=>{\r\n    let toReturn = null;\r\n    let text = props.linkLabel;\r\n    props.subTitle? toReturn = (<a rel = {\"noopener noreferrer\"} target=\"_blank\" id ={props.subTitle} className = \"slidersubtitle\" href = {props.subTitle}>{text}</a>):\r\n    toReturn = (<a rel = {\"noopener noreferrer\"} target=\"_blank\" className= \"sliderTitle\" id = {props.name} href = {props.href}>{props.name}</a>);\r\n    return (toReturn);\r\n}","import React from 'react';\r\nimport '../styles.css'\r\n\r\nexport const Writing = (props)=>{\r\n    let text = null;\r\n    let style = null;\r\n    \r\n    if (props.ListView){\r\n        if (props.ordered){\r\n            style = 'decimal';\r\n        }\r\n        else if (props.bullets){\r\n            style = \"initial\";\r\n        }\r\n        else style = \"none\"\r\n        \r\n        console.log(style);\r\n        text = (\r\n            props.text.map((e)=>{\r\n                return <li  className = \"textSubpageListItem\" style  = {{listStyleType: style, marginTop: '2vh'}} key={e}>{e}</li>\r\n            })\r\n        );\r\n        \r\n    }\r\n    else text = props.text;\r\n    return (\r\n        <p className = 'sliderText'>{text} </p>\r\n    );\r\n}","import React from 'react';\r\nimport {Title} from './Title';\r\nimport {Writing} from './Writing';\r\nimport '../styles.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n//props.sliderImages\r\n//props.text\r\n//props.title\r\n\r\n\r\nexport class Slider extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state  = {index: 0, path: \"/static/images/projectsSlider/\", colorLeft: 'white', colorRight: 'white', clickTime: Date.now()};\r\n        this.handleLeftClick = this.handleLeftClick.bind(this);\r\n        this.handleRightClick = this.handleRightClick.bind(this);\r\n        this.scroll = this.scroll.bind(this);\r\n\r\n    }\r\n\r\n    handleLeftClick(){\r\n        let _index = this.state.index;\r\n\r\n        if (this.props.length > 1){\r\n            let Img = document.getElementById(\"img\"+this.props.title);\r\n      \r\n            Img.style.animation = \"fadeIn 0.5s linear\";\r\n            Img.addEventListener('animationend', ()=>{\r\n                Img.style.animation = \"none\";\r\n                console.log(\"animation state: \"+Img.style.animationPlayState);\r\n            });\r\n        }\r\n        \r\n        if (this.state.index > 0){\r\n            _index -= 1;\r\n        }\r\n        else{\r\n            _index=this.props.imgs.length -1;\r\n        }\r\n        //Img.style.animation = \"slideIn 1s linear\";    \r\n        this.setState({index: _index, clickTime: Date.now()});\r\n    }\r\n\r\n    handleRightClick(){\r\n        let _index = this.state.index;\r\n\r\n        if (this.props.length > 1){\r\n            let Img = document.getElementById(\"img\"+this.props.title);\r\n      \r\n            Img.style.animation = \"fadeIn 1s linear\";\r\n            Img.addEventListener('animationend', ()=>{\r\n                Img.style.animation = \"none\";\r\n                console.log(\"animation state: \"+Img.style.animationPlayState);\r\n            });\r\n        }\r\n       \r\n        if (this.state.index < (this.props.imgs.length - 1)){\r\n            _index += 1;\r\n        }\r\n        else{\r\n            _index = 0;\r\n        }\r\n        this.setState({index: _index, clickTime: Date.now()});\r\n    }\r\n\r\n    scroll(){\r\n        if (Date.now() - this.state.clickTime >= 5000){\r\n            this.handleRightClick();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let img = this.props.imgs[this.state.index];\r\n       // console.log(img);\r\n        img = this.state.path+img;\r\n\r\n        setTimeout(()=>{this.scroll()}, 5100);\r\n        const slider = (\r\n            <div className = \"sliderGridChild\">\r\n                <div id = \"titles\">\r\n                    <Title  name  ={this.props.title}></Title>\r\n                    <Title subTitle = {this.props.subtitleLink} linkLabel = {this.props.linkLabel}></Title>\r\n                </div>\r\n                \r\n                <div className = \"sliderContent\">\r\n                    <div className = \"sliderWindow\">\r\n                        <button className = \"sliderLeftBtn\" onClick = {this.handleLeftClick} style={{color: this.state.colorLeft}}>&#10094;</button>\r\n                        <button className = \"sliderRightBtn\" onClick = {this.handleRightClick} style={{color: this.state.colorRight}}>&#10095;</button>\r\n                        <img className = \"sliderImg\" id = {\"img\"+this.props.title} src = {img} alt = \"\"></img>\r\n                    </div>\r\n                    <Writing  text = {this.props.text} ></Writing>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n        return(slider);\r\n    }\r\n    \r\n\r\n}\r\n\r\nSlider.propTypes = {\r\n    imgs : PropTypes.array.isRequired\r\n};","import React from 'react';\r\nimport {Slider} from './Slider';\r\n\r\nexport class SliderCollage extends React.Component{\r\n    render(){\r\n        let sections = [];\r\n        for (var element in this.props.sliderData){\r\n            //console.log(this.props.sliderData[element].link);\r\n            sections.push(\r\n            <Slider \r\n                imgs = {this.props.sliderData[element].imgs}\r\n                title = {this.props.sliderData[element].title}\r\n                text = {this.props.sliderData[element].text}\r\n                subtitleLink = {this.props.sliderData[element].link}\r\n                linkLabel = {this.props.sliderData[element].linkLabel}\r\n            ></Slider>);\r\n        }\r\n        let toReturn = (\r\n            sections.map((e, index)=>{\r\n                return(\r\n                    <div key = {index} className = \"sliderGrid\">\r\n                        {e}\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n        return(\r\n            <div>\r\n                 <h1 className = \"titleSubpage\">{this.props.title}</h1>\r\n                <div id = \"allSliders\">\r\n                    {toReturn}\r\n                </div>\r\n            </div>\r\n           \r\n        );\r\n    }\r\n}","\r\nlet SliderData = [];\r\n\r\n//Drone\r\nlet drone = {\r\n    imgs: ['Drone/1.jpg', 'Drone/2.jpg', 'Drone/3.jpg'],\r\n    text: \"The essential purpose of making a drone was to learn about communications, wiring, and control of different hardware. This project consisted of components such as Arduino Uno, speed controllers, transmitter/receiver, which all had to be in sync for the project to succeed. Completing this project helped me gain skills in constructing more efficient and dynamic electromechanical systems.\",\r\n    title: \"Drone\"\r\n}\r\n\r\n//mop\r\nlet Mop = {\r\n    imgs: ['Mop/1.jpg','Mop/2.jpg', 'Mop/3.jpg'],\r\n    text: \"The autonomous mop was  a complex project done in a team of 4. During the initial setup, the owner tells the mop when to start, after which no human intervention is needed. Before starting its operation, the robot maps the area to calculate the most efficient routes for its mopping. The robot automatically wets the mop and lowers it to the ground when it is ready. Completing this project taught me how to handle large-scale projects, manage a team and that “no one is smarter than you are if you are hard-working”.\",\r\n    title: \"Autonomous Mop\"\r\n}\r\n\r\n//arm\r\n/*\r\nlet arm = {\r\n    imgs: [\"Arm/1.jpg\", \"Arm/2.jpg\"],\r\n    text: \"\",\r\n}\r\n*/\r\n\r\n//circuits\r\nlet Circuits = {\r\n    imgs: [\"Circuits/1.jpg\",  \"Circuits/2.jpg\"],\r\n    text: \"The circuits were made using different ICs and other electronic components. It was a great learning opportunity that taught me about the basic building blocks of today’s high-end microchips. For many of these projects, no microcontroller was used to boost learning about frequency rates and circuit-control using timer ICs and logic gates.\",\r\n    title: \"IC Circuits\"\r\n}\r\n\r\n//Car\r\nlet Car = {\r\n    imgs: [\"Car/1.jpg\", \"Car/2.jpg\"],\r\n    text: \"This project helped me in understanding the functionality of autonomous cars in a simple manner. The car used an ultrasonic sensor to detect obstacles in its path and manipulate its direction accordingly. Completing this project made me realize the simplicity behind complex projects such as Tesla's electric car.\",\r\n    title: \"Obsticle Avoiding Car\"\r\n}\r\n\r\n//Artwork\r\nlet Artwork = {\r\n    imgs: [\"Artwork/1.jpg\", \"Artwork/2.jpg\", \"Artwork/3.jpg\", \"Artwork/4.jpg\"],\r\n    text: \"As a hobby, I like to create pieces of artwork. I make at least one painting a year to help me stay creative and open to new ideas. In the future, I look forward to moving from acrylics to oil paints to get a more realistic effect on my paintings.\",\r\n    title: \"Artwork (Hobby)\"\r\n}\r\n\r\nlet Pong = {\r\n    imgs: [\"Pong/1.png\", \"Pong/2.PNG\", \"Pong/3.PNG\"],\r\n    text: \"The purpose of Random Pong was to help me towards efficiently getting started with web development. This game consists of both a local mode, allowing 2 players to play locally and a multiplayer mode, allowing players to play over the internet. The users can also opt-in for ‘Play a Friend’ mode, which allows them to create or join a server to play with a friend. Completing this project helped me gain skills towards using CSS, HTML, Javascript, SocketIO, and ExpressJS.\",\r\n    title: \"Random Pong Online\",\r\n    link: \"https://rebrand.ly/RandomPong\",\r\n    linkLabel: \"Click Here For Live Example\"\r\n}\r\n\r\nlet Portfolio = {\r\n    imgs: [\"Portfolio/1.PNG\"],\r\n    text: \"The motive of this project was done for me to showcase my life to those interested and to get started with ReactJS and Flask. This website consists of ReactJs as the front-end and Flask as the back-end. The result of this project was a decent website designed to portray my personality. Completing this project taught me to effectively handle user input, make dynamic HTML files and use CSS grids.\",\r\n    title: \"Portfolio\"\r\n}\r\n\r\nlet Triangle = {\r\n    imgs: [\"Triangle/1.PNG\", \"Triangle/2.PNG\"],\r\n    text: \"This triangle-solver can solve any triangle and deals with all cases, including ambiguous and ‘Does Not Exist’. Once the user enters the data, the program returns the solved triangle, its area and its perimeter. The program also allows the user to change an input such as a side-length or an angle. Completing this project made me more efficient at programming in Java.\",\r\n    title: \"Java Triangle Solver\",\r\n    link: \"https://github.com/AmritpalChera/Triangle-Solver\",\r\n    linkLabel: \"Project GitHub\"\r\n}\r\n\r\nlet WrestleBot =  {\r\n    imgs: [\"WrestleBot/1.jpg\"],\r\n    text: \"WrestleBot, a project consisting of a team of 4,  played a key role in the way I view programming. The robot was designed to compete in a regional competition. Unfortunately, during the morning of the event, the code did not work due to user-written libraries that caused unexpected errors. The lesson was to never use code that was not well documented. To fix the issues, I rewrote my team’s code during the event which got us the bronze medal at the competition. Completing this project taught me to analyze the reliability and the benefits of the imported code before it is used.\",\r\n    title: \"WrestleBot\"\r\n}\r\n\r\nSliderData.push(Pong);\r\nSliderData.push(drone);\r\nSliderData.push(Mop);\r\nSliderData.push(Portfolio);\r\nSliderData.push(Triangle);\r\nSliderData.push(WrestleBot);\r\nSliderData.push(Car);\r\nSliderData.push(Circuits);\r\nSliderData.push(Artwork);\r\n\r\n\r\n\r\nexport {SliderData};\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Header} from './Header/Header';\r\nimport {SliderCollage} from './Slider/SliderCollage';\r\nimport {SliderData} from './sliderData';\r\n\r\n\r\n\r\n//header\r\nlet navbarList = ['Projects', 'About', 'Contact'];\r\nReactDOM.render(\r\n    <Header list = {navbarList} name = \"AMRITPAL CHERA\" TitleHref = \"/\"/>,\r\n    document.getElementById('header')\r\n);\r\n\r\n\r\nReactDOM.render(\r\n  <SliderCollage title = \"PROJECTS\" sliderData = {SliderData}></SliderCollage>,\r\n  document.getElementById('projectsPage')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}